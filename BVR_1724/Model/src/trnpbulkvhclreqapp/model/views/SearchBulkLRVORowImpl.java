package trnpbulkvhclreqapp.model.views;

import adf.utils.ebiz.EbizParamsAPPUtils;

import java.math.BigInteger;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;

import trnpbulkvhclreqapp.model.services.TrnpBulkVhclReqAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 10 20:37:56 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchBulkLRVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DocId,
        DispId,
        DrftDispId,
        DocDt,
        UsrIdCreate,
        Freeze,
        LrStatus,
        AttNm,
        DocTypId,
        VrMode,
        CustNm,
        SoIds,
        TransUsrNm,
        TransDocTypNm,
        TransVrMode,
        LOVStatusVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DISPID = AttributesEnum.DispId.index();
    public static final int DRFTDISPID = AttributesEnum.DrftDispId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int FREEZE = AttributesEnum.Freeze.index();
    public static final int LRSTATUS = AttributesEnum.LrStatus.index();
    public static final int ATTNM = AttributesEnum.AttNm.index();
    public static final int DOCTYPID = AttributesEnum.DocTypId.index();
    public static final int VRMODE = AttributesEnum.VrMode.index();
    public static final int CUSTNM = AttributesEnum.CustNm.index();
    public static final int SOIDS = AttributesEnum.SoIds.index();
    public static final int TRANSUSRNM = AttributesEnum.TransUsrNm.index();
    public static final int TRANSDOCTYPNM = AttributesEnum.TransDocTypNm.index();
    public static final int TRANSVRMODE = AttributesEnum.TransVrMode.index();
    public static final int LOVSTATUSVO1 = AttributesEnum.LOVStatusVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchBulkLRVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DispId.
     * @return the DispId
     */
    public String getDispId() {
        return (String) getAttributeInternal(DISPID);
    }

    /**
     * Gets the attribute value for the calculated attribute DrftDispId.
     * @return the DrftDispId
     */
    public String getDrftDispId() {
        return (String) getAttributeInternal(DRFTDISPID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    //    /**
    //     * @return the Application Module
    //     */

    /**
     * Gets the attribute value for the calculated attribute Freeze.
     * @return the Freeze
     */
    public String getFreeze() {
        return (String) getAttributeInternal(FREEZE);
    }

    /**
     * Gets the attribute value for the calculated attribute LrStatus.
     * @return the LrStatus
     */
    public Integer getLrStatus() {
        return (Integer) getAttributeInternal(LRSTATUS);
    }

    /**
     * Gets the attribute value for the calculated attribute AttNm.
     * @return the AttNm
     */
    public String getAttNm() {
        return (String) getAttributeInternal(ATTNM);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypId.
     * @return the DocTypId
     */
    public Integer getDocTypId() {
        return (Integer) getAttributeInternal(DOCTYPID);
    }

    /**
     * Gets the attribute value for the calculated attribute VrMode.
     * @return the VrMode
     */
    public Integer getVrMode() {
        return (Integer) getAttributeInternal(VRMODE);
    }

    /**
     * Gets the attribute value for the calculated attribute CustNm.
     * @return the CustNm
     */
    public String getCustNm() {
        return (String) getAttributeInternal(CUSTNM);
    }

    /**
     * Gets the attribute value for the calculated attribute SoIds.
     * @return the SoIds
     */
    public String getSoIds() {
        return (String) getAttributeInternal(SOIDS);
    }

    protected TrnpBulkVhclReqAMImpl getAm() {
        return (TrnpBulkVhclReqAMImpl) this.getDBTransaction().getRootApplicationModule();
    }

    /**
     * Gets the attribute value for the calculated attribute TransUsrNm.
     * @return the TransUsrNm
     */
    public String getTransUsrNm() {
        //System.out.println(" ====  ===user name");
        if (getAttributeInternal(TRANSUSRNM) == null && this.getUsrIdCreate() != null) {
            String UsrNm = EbizParamsAPPUtils.getUsrDescFrmUsrId(getAm(), this.getUsrIdCreate());
            setTransUsrNm(UsrNm);
        }
        return (String) getAttributeInternal(TRANSUSRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUsrNm.
     * @param value value to set the  TransUsrNm
     */
    public void setTransUsrNm(String value) {
        setAttributeInternal(TRANSUSRNM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransDocTypNm.
     * @return the TransDocTypNm
     */
    public String getTransDocTypNm() {
        if (getAttributeInternal(TRANSDOCTYPNM) == null && this.getDocTypId() != null) {
            String nm = EbizParamsAPPUtils.getDsDescFrmAttId(getAm(), this.getDocTypId());
            //            System.out.println("DocTyopeNm get ="+ nm);
            setTransDocTypNm(nm);
        }
        return (String) getAttributeInternal(TRANSDOCTYPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocTypNm.
     * @param value value to set the  TransDocTypNm
     */
    public void setTransDocTypNm(String value) {
        setAttributeInternal(TRANSDOCTYPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVrMode.
     * @return the TransVrMode
     */
    public String getTransVrMode() {
        //System.out.println(getAttributeInternal(TRANSVRMODE)+" ========== getter : "+getVrMode());
        if (getAttributeInternal(TRANSVRMODE) == null && getVrMode() != null) {
            // System.out.println(" =-==== "+ EbizParamsAPPUtils.getDsDescFrmAttId(this.getAm(), getVrMode()));

            return EbizParamsAPPUtils.getDsDescFrmAttId(this.getAm(), getVrMode());
        }
        return (String) getAttributeInternal(TRANSVRMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVrMode.
     * @param value value to set the  TransVrMode
     */
    public void setTransVrMode(String value) {
        setAttributeInternal(TRANSVRMODE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVStatusVO1.
     */
    public RowSet getLOVStatusVO1() {
        return (RowSet) getAttributeInternal(LOVSTATUSVO1);
    }
}

