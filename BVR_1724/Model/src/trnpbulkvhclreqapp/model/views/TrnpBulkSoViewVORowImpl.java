package trnpbulkvhclreqapp.model.views;

import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParams;
import adf.utils.ebiz.EbizParamsAPPUtils;

import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;
import java.math.BigInteger;


import java.sql.Types;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import trnpbulkvhclreqapp.model.services.TrnpBulkVhclReqAMImpl;
//import trnpbulkvhclreqapp.model.views.common.Type;
//import trnpbulkvhclreqapp.model.views.common.Type;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jul 07 14:41:56 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TrnpBulkSoViewVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CurrIdSp,
        DocId,
        DocDt,
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        SoId,
        EoId,
        TotAmtBs,
        SoMode,
        OrderStat,
        DlvSchdlNo,
        FyId,
        DlvDt,
        RouteId,
        ArrivalLocId,
        DepartLocId,
        ShipAdds,
        AddsLoc,
        Adds,
        RouteNm,
        CashCustNm,
        CbmVal,
        SalesItmQty,
        ExpFlag,
        TransVhclTyp,
        TransReqTyp,
        TransRoutTyp,
        TransRoutTypId,
        TransReqTypId,
        TransVhclTypId,
        TransChkSelect,
        TransEoNm,
        TransGrossWt,
        TransLocNm,
        TransLocId,
        TransBalanceWt,
        TransWhName,
        LOVReqTypVO1,
        LOVRouteVO1,
        LOVVhclTypeVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SOID = AttributesEnum.SoId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int SOMODE = AttributesEnum.SoMode.index();
    public static final int ORDERSTAT = AttributesEnum.OrderStat.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int DLVDT = AttributesEnum.DlvDt.index();
    public static final int ROUTEID = AttributesEnum.RouteId.index();
    public static final int ARRIVALLOCID = AttributesEnum.ArrivalLocId.index();
    public static final int DEPARTLOCID = AttributesEnum.DepartLocId.index();
    public static final int SHIPADDS = AttributesEnum.ShipAdds.index();
    public static final int ADDSLOC = AttributesEnum.AddsLoc.index();
    public static final int ADDS = AttributesEnum.Adds.index();
    public static final int ROUTENM = AttributesEnum.RouteNm.index();
    public static final int CASHCUSTNM = AttributesEnum.CashCustNm.index();
    public static final int CBMVAL = AttributesEnum.CbmVal.index();
    public static final int SALESITMQTY = AttributesEnum.SalesItmQty.index();
    public static final int EXPFLAG = AttributesEnum.ExpFlag.index();
    public static final int TRANSVHCLTYP = AttributesEnum.TransVhclTyp.index();
    public static final int TRANSREQTYP = AttributesEnum.TransReqTyp.index();
    public static final int TRANSROUTTYP = AttributesEnum.TransRoutTyp.index();
    public static final int TRANSROUTTYPID = AttributesEnum.TransRoutTypId.index();
    public static final int TRANSREQTYPID = AttributesEnum.TransReqTypId.index();
    public static final int TRANSVHCLTYPID = AttributesEnum.TransVhclTypId.index();
    public static final int TRANSCHKSELECT = AttributesEnum.TransChkSelect.index();
    public static final int TRANSEONM = AttributesEnum.TransEoNm.index();
    public static final int TRANSGROSSWT = AttributesEnum.TransGrossWt.index();
    public static final int TRANSLOCNM = AttributesEnum.TransLocNm.index();
    public static final int TRANSLOCID = AttributesEnum.TransLocId.index();
    public static final int TRANSBALANCEWT = AttributesEnum.TransBalanceWt.index();
    public static final int TRANSWHNAME = AttributesEnum.TransWhName.index();
    public static final int LOVREQTYPVO1 = AttributesEnum.LOVReqTypVO1.index();
    public static final int LOVROUTEVO1 = AttributesEnum.LOVRouteVO1.index();
    public static final int LOVVHCLTYPEVO1 = AttributesEnum.LOVVhclTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TrnpBulkSoViewVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CurrIdSp.
     * @return the CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }


    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public oracle.jbo.domain.Timestamp getDocDt() {
        return (oracle.jbo.domain.Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }


    /**
     * Gets the attribute value for the calculated attribute SoId.
     * @return the SoId
     */
    public String getSoId() {
        return (String) getAttributeInternal(SOID);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtBs.
     * @return the TotAmtBs
     */
    public Number getTotAmtBs() {
        return (Number) getAttributeInternal(TOTAMTBS);
    }


    /**
     * Gets the attribute value for the calculated attribute SoMode.
     * @return the SoMode
     */
    public Integer getSoMode() {
        return (Integer) getAttributeInternal(SOMODE);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderStat.
     * @return the OrderStat
     */
    public Integer getOrderStat() {
        return (Integer) getAttributeInternal(ORDERSTAT);
    }

    /**
     * Gets the attribute value for the calculated attribute DlvSchdlNo.
     * @return the DlvSchdlNo
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Gets the attribute value for the calculated attribute DlvDt.
     * @return the DlvDt
     */
    public Timestamp getDlvDt() {
        return (Timestamp) getAttributeInternal(DLVDT);
    }


    /**
     * Gets the attribute value for the calculated attribute RouteId.
     * @return the RouteId
     */
    public String getRouteId() {
        return (String) getAttributeInternal(ROUTEID);
    }


    /**
     * Gets the attribute value for the calculated attribute ArrivalLocId.
     * @return the ArrivalLocId
     */
    public String getArrivalLocId() {

        return (String) getAttributeInternal(ARRIVALLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ArrivalLocId.
     * @param value value to set the  ArrivalLocId
     */
    public void setArrivalLocId(String value) {
        setAttributeInternal(ARRIVALLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DepartLocId.
     * @return the DepartLocId
     */
    public String getDepartLocId() {
        return (String) getAttributeInternal(DEPARTLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DepartLocId.
     * @param value value to set the  DepartLocId
     */
    public void setDepartLocId(String value) {
        setAttributeInternal(DEPARTLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipAdds.
     * @return the ShipAdds
     */
    public String getShipAdds() {
        return (String) getAttributeInternal(SHIPADDS);
    }


    /**
     * Gets the attribute value for the calculated attribute AddsLoc.
     * @return the AddsLoc
     */
    public String getAddsLoc() {
        return (String) getAttributeInternal(ADDSLOC);
    }


    /**
     * Gets the attribute value for the calculated attribute Adds.
     * @return the Adds
     */
    public String getAdds() {
        return (String) getAttributeInternal(ADDS);
    }


    /**
     * Gets the attribute value for the calculated attribute RouteNm.
     * @return the RouteNm
     */
    public String getRouteNm() {
        return (String) getAttributeInternal(ROUTENM);
    }

    /**
     * Gets the attribute value for the calculated attribute CashCustNm.
     * @return the CashCustNm
     */
    public String getCashCustNm() {
        return (String) getAttributeInternal(CASHCUSTNM);
    }

    /**
     * Gets the attribute value for the calculated attribute CbmVal.
     * @return the CbmVal
     */
    public Number getCbmVal() {
        return (Number) getAttributeInternal(CBMVAL);
    }


    /**
     * Gets the attribute value for the calculated attribute SalesItmQty.
     * @return the SalesItmQty
     */
    public Number getSalesItmQty() {
        return (Number) getAttributeInternal(SALESITMQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute ExpFlag.
     * @return the ExpFlag
     */
    public String getExpFlag() {
        return (String) getAttributeInternal(EXPFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVhclTyp.
     * @return the TransVhclTyp
     */
    public String getTransVhclTyp() {
        return (String) getAttributeInternal(TRANSVHCLTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVhclTyp.
     * @param value value to set the  TransVhclTyp
     */
    public void setTransVhclTyp(String value) {
        setAttributeInternal(TRANSVHCLTYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransReqTyp.
     * @return the TransReqTyp
     */
    public String getTransReqTyp() {
        return (String) getAttributeInternal(TRANSREQTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransReqTyp.
     * @param value value to set the  TransReqTyp
     */
    public void setTransReqTyp(String value) {
        setAttributeInternal(TRANSREQTYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRoutTyp.
     * @return the TransRoutTyp
     */
    public String getTransRoutTyp() {
        if (getAttributeInternal(TRANSROUTTYP) == null && this.getRouteId() != null) {
//            ViewObjectImpl vo = this.getAm().getLOVRoute1();
//            vo.setNamedWhereClauseParam("cldIdbind", this.getCldId());
//            vo.setNamedWhereClauseParam("slocIdBind", this.getSlocId());
//            vo.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
//            vo.setNamedWhereClauseParam("orgIdBind", this.getOrgId());
//            vo.setNamedWhereClauseParam("RouteDocIdBind", this.getRouteId());
//            vo.executeQuery();
//            Row[] r = vo.getAllRowsInRange();
//            if (r.length > 0) {
//                setTransRoutTyp((String) r[0].getAttribute("RouteNm"));
//            }
            String routeName=null;
           routeName= this.getAm().getRouteName(this.getRouteId());
          // System.out.println("route name in getter ============================= "+routeName);
           return routeName;
        }
        return (String) getAttributeInternal(TRANSROUTTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRoutTyp.
     * @param value value to set the  TransRoutTyp
     */
    public void setTransRoutTyp(String value) {
        setAttributeInternal(TRANSROUTTYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRoutTypId.
     * @return the TransRoutTypId
     */
    public String getTransRoutTypId() {
        return (String) getAttributeInternal(TRANSROUTTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRoutTypId.
     * @param value value to set the  TransRoutTypId
     */
    public void setTransRoutTypId(String value) {
        setAttributeInternal(TRANSROUTTYPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransReqTypId.
     * @return the TransReqTypId
     */
    public String getTransReqTypId() {
        return (String) getAttributeInternal(TRANSREQTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransReqTypId.
     * @param value value to set the  TransReqTypId
     */
    public void setTransReqTypId(String value) {
        setAttributeInternal(TRANSREQTYPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVhclTypId.
     * @return the TransVhclTypId
     */
    public Integer getTransVhclTypId() {
        return (Integer) getAttributeInternal(TRANSVHCLTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVhclTypId.
     * @param value value to set the  TransVhclTypId
     */
    public void setTransVhclTypId(Integer value) {
        setAttributeInternal(TRANSVHCLTYPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkSelect.
     * @return the TransChkSelect
     */
    public String getTransChkSelect() {
        //        if(getAttributeInternal(TRANSCHKSELECT)!= null){
        //            this.getAm().getSlsTrnpBulkVr1().getCurrentRow().setAttribute("TransTotalGrossWt",this.getAm().getTotalGrossWtVal());
        //        }
       // System.out.println("getTransChkSelect :: " + getAttributeInternal(TRANSCHKSELECT));
        return (String) getAttributeInternal(TRANSCHKSELECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkSelect.
     * @param value value to set the  TransChkSelect
     */
    public void setTransChkSelect(String value) {
        //System.out.println("value get setter of setTransChkSelect::" + value);
        setAttributeInternal(TRANSCHKSELECT, value);
    }

    /**
     * @return the Application Module
     */
    protected TrnpBulkVhclReqAMImpl getAm() {
        return (TrnpBulkVhclReqAMImpl) this.getDBTransaction().getRootApplicationModule();
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoNm.
     * @return the TransEoNm
     */
    public String getTransEoNm() {
        if (getAttributeInternal(TRANSEONM) == null && this.getEoId() != null) {
            String EoNm = EbizParamsAPPUtils.getEoDescFrmEoId(this.getAm(), this.getEoId());
            setTransEoNm(EoNm);
        }
        return (String) getAttributeInternal(TRANSEONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoNm.
     * @param value value to set the  TransEoNm
     */
    public void setTransEoNm(String value) {
        setAttributeInternal(TRANSEONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrossWt.
     * @return the TransGrossWt
     */
    public Number getTransGrossWt() {
        if (getAttributeInternal(TRANSGROSSWT) == null ) {
            Number w = StaticValue.NUMBER_ZERO;
//            setTransGrossWt(this.getStdWeight());
            setTransGrossWt(w);
        }
        return (Number) getAttributeInternal(TRANSGROSSWT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrossWt.
     * @param value value to set the  TransGrossWt
     */
    public void setTransGrossWt(Number value) {
        setAttributeInternal(TRANSGROSSWT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocNm.
     * @return the TransLocNm
     */
    public String getTransLocNm() {
//        if (getAttributeInternal(TRANSLOCNM) == null && this.getShipAdds() != null) {
//            
//            //System.out.println(" =========== this.getShipAdds() "+this.getShipAdds());
//            ViewObjectImpl vo = this.getAm().getLOVLocationId1();
//            vo.setNamedWhereClauseParam("BindCldId", null);
//            vo.setNamedWhereClauseParam("BindSlocId", null);
//            vo.setNamedWhereClauseParam("BindAddsId", null);
//            vo.executeQuery();
//
//
//            vo.setNamedWhereClauseParam("BindCldId", this.getCldId());
//            vo.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
//            //   vo.setNamedWhereClauseParam("BindLocId",this.getArrivalLocId());
//            vo.setNamedWhereClauseParam("BindAddsId", this.getShipAdds());
//            vo.executeQuery();
//            Row[] r = vo.getAllRowsInRange();
//            if (r.length > 0) {
//                //System.out.println(" =========== this.getShipAdds() "+(String) r[0].getAttribute("AddsLoc"));
//                setTransLocNm((String) r[0].getAttribute("AddsLoc"));
//            }
//        }
        return (String) getAttributeInternal(TRANSLOCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocNm.
     * @param value value to set the  TransLocNm
     */
    public void setTransLocNm(String value) {
        setAttributeInternal(TRANSLOCNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocId.
     * @return the TransLocId
     */
    public String getTransLocId() {
        return (String) getAttributeInternal(TRANSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocId.
     * @param value value to set the  TransLocId
     */
    public void setTransLocId(String value) {
        setAttributeInternal(TRANSLOCID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransBalanceWt.
     * @return the TransBalanceWt
     */
    public Number getTransBalanceWt() {
        if (getAttributeInternal(TRANSBALANCEWT) == null ) {
//            Number n = this.getAm().calcBlncWt(getDocId());
//            Number w =  this.getStdWeight().subtract(n);
//            System.out.println("Balance Weight = " + w);
            Number w = StaticValue.NUMBER_ZERO;
            setTransBalanceWt(w);

        }
        return (Number) getAttributeInternal(TRANSBALANCEWT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBalanceWt.
     * @param value value to set the  TransBalanceWt
     */
    public void setTransBalanceWt(Number value) {
        setAttributeInternal(TRANSBALANCEWT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransWhName.
     * @return the TransWhName
     */
    public String getTransWhName() {
//        if(getWhId()!=null && getAttributeInternal(TRANSWHNAME)==null){
//            String WhIDNm = EbizParamsAPPUtils.getWhDescFrmWhId(this.getAm(), this.getWhId());
//            return WhIDNm;
//        }
        return (String) getAttributeInternal(TRANSWHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransWhName.
     * @param value value to set the  TransWhName
     */
    public void setTransWhName(String value) {
        setAttributeInternal(TRANSWHNAME, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVReqTypVO1.
     */
    public RowSet getLOVReqTypVO1() {
        return (RowSet) getAttributeInternal(LOVREQTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRouteVO1.
     */
    public RowSet getLOVRouteVO1() {
        return (RowSet) getAttributeInternal(LOVROUTEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVVhclTypeVO1.
     */
    public RowSet getLOVVhclTypeVO1() {
        return (RowSet) getAttributeInternal(LOVVHCLTYPEVO1);
    }

}

