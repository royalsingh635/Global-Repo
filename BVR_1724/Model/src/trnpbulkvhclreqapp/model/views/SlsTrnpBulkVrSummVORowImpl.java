package trnpbulkvhclreqapp.model.views;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;

import trnpbulkvhclreqapp.model.views.common.SlsTrnpBulkVrSummVORow;
import adf.utils.ebiz.EbizParamsMNFUtils;

import adf.utils.model.ADFModelUtils;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import trnpbulkvhclreqapp.model.services.TrnpBulkVhclReqAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 24 12:20:15 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpBulkVrSummVORowImpl
  extends ViewRowImpl
  implements SlsTrnpBulkVrSummVORow
{
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  public enum AttributesEnum
  {
    CldId,
    SlocId,
    OrgId,
    HoOrgId,
    DocId,
    BtoDocId,
    WhId,
    TransCageName,
    TransBTONo,
    TransVhclNo,
    TransCustVhclNo,
    TransOldVhclNo,
    TransReqTyp,
    SlsTrnpBulkVrItm;
    static AttributesEnum[] vals = null;
    ;
    private static final int firstIndex = 0;

    public int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static final int firstIndex()
    {
      return firstIndex;
    }

    public static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int CLDID = AttributesEnum.CldId.index();
  public static final int SLOCID = AttributesEnum.SlocId.index();
  public static final int ORGID = AttributesEnum.OrgId.index();
  public static final int HOORGID = AttributesEnum.HoOrgId.index();
  public static final int DOCID = AttributesEnum.DocId.index();
  public static final int BTODOCID = AttributesEnum.BtoDocId.index();
  public static final int WHID = AttributesEnum.WhId.index();
  public static final int TRANSCAGENAME = AttributesEnum.TransCageName.index();
  public static final int TRANSBTONO = AttributesEnum.TransBTONo.index();
  public static final int TRANSVHCLNO = AttributesEnum.TransVhclNo.index();
  public static final int TRANSCUSTVHCLNO = AttributesEnum.TransCustVhclNo.index();
  public static final int TRANSOLDVHCLNO = AttributesEnum.TransOldVhclNo.index();
  public static final int TRANSREQTYP = AttributesEnum.TransReqTyp.index();
  public static final int SLSTRNPBULKVRITM = AttributesEnum.SlsTrnpBulkVrItm.index();

  /**
   * This is the default constructor (do not remove).
   */
  public SlsTrnpBulkVrSummVORowImpl()
  {
  }


  /**
   * Gets the attribute value for the calculated attribute CldId.
   * @return the CldId
   */
  public String getCldId()
  {
    return (String) getAttributeInternal(CLDID);
  }

  /**
   * Gets the attribute value for the calculated attribute SlocId.
   * @return the SlocId
   */
  public String getSlocId()
  {
    return (String) getAttributeInternal(SLOCID);
  }

  /**
   * Gets the attribute value for the calculated attribute OrgId.
   * @return the OrgId
   */
  public String getOrgId()
  {
    return (String) getAttributeInternal(ORGID);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
   * @param value value to set the  OrgId
   */
  public void setOrgId(String value)
  {
    setAttributeInternal(ORGID, value);
  }

  /**
   * Gets the attribute value for the calculated attribute HoOrgId.
   * @return the HoOrgId
   */
  public String getHoOrgId()
  {
    return (String) getAttributeInternal(HOORGID);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
   * @param value value to set the  HoOrgId
   */
  public void setHoOrgId(String value)
  {
    setAttributeInternal(HOORGID, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DocId.
   * @return the DocId
   */
  public String getDocId()
  {
    return (String) getAttributeInternal(DOCID);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
   * @param value value to set the  DocId
   */
  public void setDocId(String value)
  {
    setAttributeInternal(DOCID, value);
  }

  /**
   * Gets the attribute value for the calculated attribute BtoDocId.
   * @return the BtoDocId
   */
  public String getBtoDocId()
  {
    return (String) getAttributeInternal(BTODOCID);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute BtoDocId.
   * @param value value to set the  BtoDocId
   */
  public void setBtoDocId(String value)
  {
    setAttributeInternal(BTODOCID, value);
  }

  /**
   * Gets the attribute value for the calculated attribute WhId.
   * @return the WhId
   */
  public String getWhId()
  {
    return (String) getAttributeInternal(WHID);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
   * @param value value to set the  WhId
   */
  public void setWhId(String value)
  {
    setAttributeInternal(WHID, value);
  }

  /**
   * Gets the attribute value for the calculated attribute TransCageName.
   * @return the TransCageName
   */
  public String getTransCageName()
  { ViewObjectImpl vo1 = getAm().getSlsTrnpBulkVr1();
    if(getAttributeInternal(TRANSCAGENAME)==null && (vo1.getCurrentRow() != null && (String) vo1.getCurrentRow().getAttribute("CageId") != null) )
    {
      String CageNm=(String)EbizParamsMNFUtils.getDescFrmId(getAm(), (String) vo1.getCurrentRow().getAttribute("CageId"), "CAGE");
//      System.err.println("_____CageNm___________________"+CageNm);
      return CageNm;
    }
    return (String) getAttributeInternal(TRANSCAGENAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TransCageName.
   * @param value value to set the  TransCageName
   */
  public void setTransCageName(String value)
  {
    setAttributeInternal(TRANSCAGENAME, value);
  }
  /**
   * @return the Application Module
   */ 
  protected TrnpBulkVhclReqAMImpl getAm() {
         return (TrnpBulkVhclReqAMImpl) this.getDBTransaction().getRootApplicationModule();
     }
  /**
   * Gets the attribute value for the calculated attribute TransBTONo.
   * @return the TransBTONo
   */
  public String getTransBTONo()
  {
    if(getAttributeInternal(TRANSBTONO)==null && getBtoDocId()!=null)
    {
      String BTONo=(String)EbizParamsMNFUtils.getDescFrmId(getAm(), getBtoDocId(), "BULKTRF");
//      System.err.println("_____BTO NO.___________________"+BTONo);
      return BTONo;
    }
    return (String) getAttributeInternal(TRANSBTONO);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TransBTONo.
   * @param value value to set the  TransBTONo
   */
  public void setTransBTONo(String value)
  {
    setAttributeInternal(TRANSBTONO, value);
  }
  /**
   * Gets the attribute value for the calculated attribute TransVhclNo.
   * @return the TransVhclNo
   */
  public String getTransVhclNo()
  {
    /**
            * Added by : Manjeet Singh
            * Modified on : 04-12-23
            * Remarks : This Below code is used for showing Vhcl No. '.
            * TMS ID : 128922
            **/
    String VhclNo=null;
//    System.err.println("_____pageFlowScope.VHCL_NO_______"+ADFModelUtils.resolvEl("#{pageFlowScope.VHCL_NO}"));
       if(getAttributeInternal(TRANSVHCLNO)==null &&(String) ADFModelUtils.resolvEl("#{pageFlowScope.VHCL_NO}")!=null )
    {
      return(String) ADFModelUtils.resolvEl("#{pageFlowScope.VHCL_NO}"); 
    }
//    System.err.println("____getAm().getSlsTrnpBulkVrSrc1().getEstimatedRowCount()____"+getAm().getSlsTrnpBulkVrSrc1().getEstimatedRowCount());
    if(getAttributeInternal(TRANSVHCLNO)==null &&(String) ADFModelUtils.resolvEl("#{pageFlowScope.VHCL_NO}")==null &&
            getAm().getSlsTrnpBulkVrSrc1().getEstimatedRowCount()>0)
    {
      ViewObjectImpl vo1 = getAm().getSlsTrnpBulkVrSrc1();
//      System.err.println("____this.getDocId()____"+this.getDocId());
      Row[] row = vo1.getFilteredRows("DocId", this.getDocId());
      if (row.length > 0)
      {
        String ownShipTyp=(String)row[0].getAttribute("ReqTyp");
        if(ownShipTyp.equalsIgnoreCase("C") || ownShipTyp.equalsIgnoreCase("T"))
        {
           VhclNo=(String)row[0].getAttribute("OldVhclNo");
//            System.err.println("OldVhclNo___________________"+VhclNo);
            return VhclNo;
        }else
        {
           VhclNo=(String)row[0].getAttribute("VhclNo");
//            System.err.println("___VhclNo____"+VhclNo);
            return VhclNo;
        }
        }
    }
    return (String) getAttributeInternal(TRANSVHCLNO);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TransVhclNo.
   * @param value value to set the  TransVhclNo
   */
  public void setTransVhclNo(String value)
  {
    setAttributeInternal(TRANSVHCLNO, value);
  }

  /**
   * Gets the attribute value for the calculated attribute TransCustVhclNo.
   * @return the TransCustVhclNo
   */
  public String getTransCustVhclNo()
  {
    
    return (String) getAttributeInternal(TRANSCUSTVHCLNO);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TransCustVhclNo.
   * @param value value to set the  TransCustVhclNo
   */
  public void setTransCustVhclNo(String value)
  {
    setAttributeInternal(TRANSCUSTVHCLNO, value);
  }

  /**
   * Gets the attribute value for the calculated attribute TransOldVhclNo.
   * @return the TransOldVhclNo
   */
  public String getTransOldVhclNo()
  {
//    if(getAttributeInternal(TRANSOLDVHCLNO)==null && (src.getCurrentRow() != null && (String) src.getCurrentRow().getAttribute("OldVhclNo") != null))
//    {
//      String OldVhclNo=(String) src.getCurrentRow().getAttribute("OldVhclNo");
//      return OldVhclNo;
//    }
    return (String) getAttributeInternal(TRANSOLDVHCLNO);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TransOldVhclNo.
   * @param value value to set the  TransOldVhclNo
   */
  public void setTransOldVhclNo(String value)
  {
    setAttributeInternal(TRANSOLDVHCLNO, value);
  }

  /**
   * Gets the attribute value for the calculated attribute TransReqTyp.
   * @return the TransReqTyp
   */
  public String getTransReqTyp()
  {
//    if(getAttributeInternal(TRANSREQTYP)==null && (src.getCurrentRow() != null && (String) src.getCurrentRow().getAttribute("ReqTyp") != null))
//    {
//      String ReqTyp=(String)src.getCurrentRow().getAttribute("ReqTyp");
//      return ReqTyp;
//    }
  
    return (String) getAttributeInternal(TRANSREQTYP);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TransReqTyp.
   * @param value value to set the  TransReqTyp
   */
  public void setTransReqTyp(String value)
  {
    setAttributeInternal(TRANSREQTYP, value);
  }

  /**
   * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpBulkVrItm.
   */
  public RowIterator getSlsTrnpBulkVrItm()
  {
    return (RowIterator) getAttributeInternal(SLSTRNPBULKVRITM);
  }

}

